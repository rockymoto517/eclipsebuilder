import{SkillMap as e,System as t,DBMap as s,XScrollTransformer as i}from"./Util.js";import n from"./GUI.js";import r from"./IO.js";import o from"./Language.js";import l from"./Stats.js";export default class c{constructor(o=!1){this.exp={skills:new e,subtrees:{support:{tier:1,points:0},controller:{tier:1,points:0},sharpshooter:{tier:1,points:0},shotgunner:{tier:1,points:0},tank:{tier:1,points:0},ammo_specialist:{tier:1,points:0},engineer:{tier:1,points:0},breacher:{tier:1,points:0},heavy:{tier:1,points:0},shinobi:{tier:1,points:0},artful_dodger:{tier:1,points:0},specialized_killing:{tier:1,points:0},gunslinger:{tier:1,points:0},revenant:{tier:1,points:0},brawler:{tier:1,points:0}},armor:null,perkDeck:null,copycat:{tactical_reload:null,head_games:null,is_this_your_bullet:null,grace_period:null,mimicry:null},perkDeckUnlock:null,throwable:null,deployable:null,deployableSecondary:null,infamyDisabled:null},this.stats=new l(this),this.sys=new t(this),this.io=new r(this),this.gui=new n(this),this.dbs=new s([["skills",null],["perk_decks",null],["perk_cards",null],["deployables",null],["throwables",null],["armors",null]]),this.scrollTransformer=new i,this.fetchPromises=this.dbs.fetchAll(),this.mobile=o,this.lang,this.perkDeckUnlockHandler()}perkDeckUnlockHandler(){const e=this.exp.perkDeckUnlock;if("copycat"===this.exp.perkDeck?null===this.exp.copycat.mimicry?this.exp.perkDeckUnlock=null:this.exp.perkDeckUnlock=this.dbs.get("copycat_mimicry").get(this.exp.copycat.mimicry).mimics:this.exp.perkDeckUnlock=this.exp.perkDeck,e!==this.exp.perkDeckUnlock){if(null!==e){const t=this.dbs.get("perk_decks").get(e).unlocks;if(void 0!==t)for(const e of t)"throwable"===e.type&&e.name===this.exp.throwable&&(this.exp.throwable=null,this.gui.Throwable_Unselect())}if(null!==this.exp.perkDeckUnlock){const e=this.dbs.get("perk_decks").get(this.exp.perkDeckUnlock).unlocks;if(void 0!==e)for(const t of e)"throwable"===t.type&&(this.exp.throwable=t.name,this.gui.Throwable_SelectById(this.exp.throwable))}}}loadLanguage(e){document.documentElement.setAttribute("lang",e),document.querySelectorAll(".arm_icon > div, .th_icon > div, .dp_icon > div").forEach((e=>e.setAttribute("data-equip",this.lang.get("system.equip")))),document.querySelectorAll(".dp_icon > div").forEach((e=>{e.setAttribute("data-primary",this.lang.get("system.primary")),e.setAttribute("data-secondary",this.lang.get("system.secondary"))}));for(const[e]of this.dbs.get("perk_decks")){document.querySelector(`#${e} p`).textContent=this.lang.get(`perk_decks.${e}.name`).toLocaleUpperCase();const t=document.querySelector(`#${e}.pk_selected p`);t&&(t.textContent=`${this.lang.get("system.equipped")}: ${this.lang.get(`perk_decks.${e}.name`).toLocaleUpperCase()}`)}for(const[e]of this.dbs.get("skills"))document.getElementById(e).parentElement.nextElementSibling.textContent=this.lang.get(`skills.${e}.name`).toLocaleUpperCase();document.querySelector(".sk_points_remaining > p").innerHTML=this.lang.get("system.skills.remaining")+document.querySelector(".sk_points_remaining p span").outerHTML,this.gui.Tree_ChangeTo(document.querySelector(".sk_tree_button_active").id.replace("button","container")),document.querySelectorAll("[data-lang]").forEach((e=>{const t=this.lang.get(e.dataset.lang);e.innerHTML=o.ref.has(e.dataset.lang)?t(o.ref.get(e.dataset.lang)):t})),n.COLOR_PATTERN=new RegExp(this.lang.get("system.colors"),"g")}changeCardBoost(e,t=void 0){const s=e.querySelector(".copycat_boosts_num").innerText;-1===t?t=(t=--e.querySelector(".copycat_current_num").innerText)<=0?s:t:void 0===t?t=(t=++e.querySelector(".copycat_current_num").innerText)>s?1:t:(t<=0||t>s)&&(t=1),e.querySelector(".copycat_current_num").innerText=t;const i=!!this.dbs.get("perk_cards").get(e.id).has_mimicry_boost;this.exp.copycat[e.id]=(i?[...this.dbs.get("copycat_mimicry").entries()]:[...this.dbs.get("copycat_boosts").entries()])[t-1][0],this.perkDeckUnlockHandler(),this.io.GetEncodedBuild()}getSkillTierCosts(){return this.exp.infamyDisabled,[0,1,3,12]}}c.TREES=["mastermind","enforcer","technician","ghost","fugitive"];
